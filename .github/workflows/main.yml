name: Rails
on: push

jobs:
  verify:
    name: Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
         POSTGRES_USER: postgres
         POSTGRES_PASSWORD: postgres
          # POSTGRES_USER: lightning_marine_services
          # # POSTGRES_DB: lightning_marine_services_test
          # POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # if you need redis
      # redis:
      #   image: redis
      #   ports:
      #   - 6379:6379
      #   options: --entrypoint redis-server

      elasticsearch:
        image: elasticsearch:6.8.3
        ports:
        - 9200/tcp
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true

      - name: Set up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Install Yarn and run build scripts
        run: |
          npm install -g yarn
          yarn install
          yarn run build
          yarn run build:css

      - name: Verify Elasticsearch connection from host
        env:
          ELASTIC_SEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
        run: |
          echo $ELASTIC_SEARCH_URL
          curl -fsSL "$ELASTIC_SEARCH_URL/_cat/health?h=status"

      - name: Build and run tests
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler:1.17.3
          bundle install --jobs 4 --retry 3
          RAILS_ENV=test bundle exec rails db:create
          RAILS_ENV=test bundle exec rails db:migrate
          echo db_name="$(bundle exec rails runner "puts ActiveRecord::Base.connection.current_database")"
          bundle exec rake searchkick:reindex:all
          RAILS_ENV=test bundle exec rake
          rspec spec

      # - name: Build and run tests
      #   env:
      #     DATABASE_URL: postgres://postgres:@localhost:5432/test
      #     RAILS_ENV: test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #   run: |
      #     sudo apt-get -yqq install libpq-dev
      #     gem install bundler:1.17.3
      #     bundle install --jobs 4 --retry 3
      #     bundle exec rails db:create
      #     bundle exec rails db:migrate
      #     echo db_name="$(bundle exec rails runner "puts ActiveRecord::Base.connection.current_database")"
      #     bundle exec rake searchkick:reindex:all
      #     RAILS_ENV=test bundle exec rake
      #     rspec spec



      #
      # - name: Bundle Install
      #   env:
      #     RAILS_ENV: test
      #     DATABASE_URL: postgres://postgres:@localhost:5432/test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #   run: |
      #     sudo apt-get -yqq install libpq-dev
      #     gem install bundler:1.17.3
      #     bundle install --jobs 4 --retry 3
      #
      # - name: Create and Migrate Test DB
      #   env:
      #     RAILS_ENV: test
      #     DATABASE_URL: postgres://postgres:@localhost:5432/test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #   run: |
      #     bin/rails db:create
      #     bin/rails db:migrate
      #
      # - name: Reindex ElasticSearch and Searchkick
      #   env:
      #     RAILS_ENV: test
      #     DATABASE_URL: postgres://postgres:@localhost:5432/test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #   run: |
      #     bundle exec rake searchkick:reindex:all
      #     RAILS_ENV=test bundle exec rake
      #
      # - name: Run tests
      #   env:
      #     RAILS_ENV: test
      #     DATABASE_URL: postgres://postgres:@localhost:5432/test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #     ELASTIC_SEARCH_URL: http://localhost:${{ job.services.elasticsearch.ports[9200] }}
      #   run: rspec spec












      # - name: Bundle install gems and dependencies
      #   run: |
      #     sudo apt-get -yqq install libpq-dev
      #     gem install bundler
      #     bundle install --jobs 4 --retry 3



      # - name: Create/Prepare Test DB
      #   env:
      #     DATABASE_URL: postgres://postgres:@localhost:5432/test
      #     RAILS_ENV: test
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: postgres
      #   run: |
      #     bundle exec rails db:create
      #     bundle exec rails db:migrate
      #     bundle exec rake searchkick:reindex:all
      #     RAILS_ENV=test bundle exec rake
      # # RAILS_ENV=test bundle exec rails db:create
      # # RAILS_ENV=test bundle exec rails db:migrate
      # # RAILS_ENV=test bundle exec rake
      # # RAILS_ENV=test bundle exec rake searchkick:reindex:all


      # - name: Prepare ElasticSearch and Searchkick
      #   run: bundle exec rake searchkick:reindex:all


      # - name: Run Tests
      #   run: bundle exec rspec spec
