wb = xlsx_package.workbook

title_styles = wb.styles.add_style(
  fg_color: "#FF000000",
  sz: 8,
  border: {
    style: :thin, color: "#FF000000"
  }
)

bold_styles = wb.styles.add_style(
  b: true,
  fg_color:"#FF000000",
  sz: 8,
  border: {
    style: :thin, color: "#FF000000"}, alignment: {horizontal: :left
  }
)

row_styles = wb.styles.add_style(
  fg_color: "#FF000000",
  border: Axlsx::STYLE_THIN_BORDER,
  sz: 8,
  alignment: {
    horizontal: :left
  }
)

timestamp = "#{(DateTime.now).try(:strftime,"%m/%d/%Y") }"; timestamp = timestamp.gsub("/","-")

file_title = "#{@scoped_resource.name} #{scoped_status} orders #{timestamp}" if scoped_resource?
file_title ||= "#{scoped_status} orders #{timestamp}"
@file_title = file_title

if @file_title.length >= 31
  @file_title = scoped_resource? ? "#{@scoped_resource.name} #{scoped_status} orders" : "#{scoped_status} orders"
  @file_title = "#{scoped_status} orders" if @file_title.length >= 31
end

wb.add_worksheet(name: @file_title, page_setup: { fit_to_width: 1, orientation: :landscape} ) do |sheet|
  sheet.add_row [@file_title], style: title_styles
  sheet.add_row (@table_headers.collect {|th| th.to_s.humanize }.freeze), style: bold_styles

  @data_table.records.each do |order|
    row = DataTable::Orders.format_row(order: order, table_headers: @table_headers).values
    sheet.add_row row, style: row_styles
  end
end
